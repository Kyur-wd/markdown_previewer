{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editorText","initialMarkdown","handleChange","bind","assertThisInitialized","e","value","target","setState","textAsHtml","marked","react_default","a","createElement","Fragment","id","placeholder","onChange","dangerouslySetInnerHTML","__html","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"gQAGMA,cACJ,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,WAAYC,GAGdT,EAAKU,aAAeV,EAAKU,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KANRA,4EASDa,GAAG,IACNC,EAAUD,EAAEE,OAAZD,MACRX,KAAKa,SAAS,CAAER,WAAYM,qCAI5B,IAAMG,EAAaC,IAAOf,KAAKI,MAAMC,YACrC,OACEW,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAA,QAAME,GAAG,aACPJ,EAAAC,EAAAC,cAAA,YACEE,GAAG,SACHC,YAAY,gCACZC,SAAUtB,KAAKO,aACfI,MAAOX,KAAKI,MAAMC,aAEpBW,EAAAC,EAAAC,cAAA,UACEE,GAAG,UACHG,wBAAyB,CAAEC,OAAQV,cA5B7BW,aAoCZnB,EAAe,8qCA+CNV,ICjFf8B,IAASC,OAAOX,EAAAC,EAAAC,cAACU,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3a0a65a4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport marked from \"marked\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      editorText: initialMarkdown\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { value } = e.target;\r\n    this.setState({ editorText: value });\r\n  }\r\n\r\n  render() {\r\n    const textAsHtml = marked(this.state.editorText);\r\n    return (\r\n      <React.Fragment>\r\n        <main id=\"container\">\r\n          <textarea\r\n            id=\"editor\"\r\n            placeholder=\"Type in your markdown here...\"\r\n            onChange={this.handleChange}\r\n            value={this.state.editorText}\r\n          />\r\n          <output\r\n            id=\"preview\"\r\n            dangerouslySetInnerHTML={{ __html: textAsHtml }}\r\n          />\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst initialMarkdown = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n`;\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}